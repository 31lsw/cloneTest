<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="cafe.jjdev.mall.mapper.MemberMapper">
	
	
	<!-- 비번찾기 시 아이디, 이메일주소 받아 비밀번호 유무 여부 조회 -->
	<select id="selectCountMemberPwByIdAndEmail" parameterType="cafe.jjdev.mall.vo.Member" resultType="int">
		SELECT
			COUNT(member_pw)
		FROM
			member
		WHERE
			member_id = #{memberId}
		AND
			member_email = #{memberEmail}
	</select>
	
	
	<!-- 임시 비밀번호 변경 후 해당 이메일로 발송 -->
	<update id="updateTempMemberPw" parameterType="cafe.jjdev.mall.vo.Member">
									<!-- <selectKey keyProperty="memberEmail" resultType="String" order="AFTER">
										SELECT
											member_email AS memberEmail
										FROM
											member
										WHERE
											member_id = #{memberId}
									</selectKey> -->
		UPDATE
			member
		SET
			member_pw = #{memberPw}
		WHERE
			member_id = #{memberId}
		AND
			member_email = #{memberEmail}
	</update>
	
	
	<!-- 아이디 중복체크 -->
	<select id="selectCountMemberIdDuplicated" parameterType="String" resultType="int">
		SELECT COUNT(member_id)
		FROM
			member_id_manage
		WHERE member_id=#{memberId}
	</select>
	
	
	<!-- 로그인 액션 -->
	<select id="selectMember" parameterType="cafe.jjdev.mall.vo.Member" resultType="cafe.jjdev.mall.vo.Member">
		SELECT
			member_id AS memberId
			,member_level AS memberLevel
			,member_name AS memberName
		FROM
			member
		WHERE
			member_id = #{memberId}
		AND
			member_pw = #{memberPw}
	</select>
	<!-- 회원 가입 액션 -->
	<insert id="insertMember" parameterType="cafe.jjdev.mall.vo.Member">
		INSERT INTO 
			member (
				member_id
				,member_pw
				,member_name
				,member_phone
				,member_address
				,member_gender
				,member_level
				,member_email
			) VALUES (
				#{memberId}
				,#{memberPw}
				,#{memberName}
				,#{memberPhone}
				,#{memberAddress}
				,#{memberGender}
				,#{memberLevel}
				,#{memberEmail}
			);
		
		INSERT INTO
			member_id_manage (
				member_id
				,member_join_date
			) VALUES (
				#{memberId}
				,now()
			)
	</insert>
	
	
	<!-- 비밀번호만 변경 -->
	<update id="updateMemberPw" parameterType="java.util.Map">
		UPDATE
			member
		SET
			member_pw = #{memberPw}
		WHERE
			member_id = #{memberId}
		AND
			member_pw = #{memberCurrentPw}
	</update>
	
	
	<!-- 회원정보 수정폼 -->
	<select id="selectMemberByUK" parameterType="String" resultType="cafe.jjdev.mall.vo.Member">
		SELECT
				member_id AS memberId
				,member_name AS memberName
				,member_phone AS memberPhone
				,member_address AS memberAddress
				,member_gender AS memberGender
				,member_level AS memberLevel
			FROM
				member
			WHERE
				member_id = #{memberId}
	</select>
	
	<!-- 회원정보 수정 액션 -->
	<update id="updateMember" parameterType="cafe.jjdev.mall.vo.Member">
		UPDATE
			member
		SET
			member_pw = #{memberPw}
			,member_phone = #{memberPhone}
			,member_address = #{memberAddress}
			,member_gender = #{memberGender}
		WHERE
				member_id = #{memberId}
			AND
				member_pw = #{memberPw}
	</update>
	
	<!-- 회원탈퇴 액션 -->
	<delete id="deleteMember" parameterType="cafe.jjdev.mall.vo.Member">
		DELETE
			FROM
				member
			WHERE
				member_id = #{memberId}
			AND
				member_pw = #{memberPw}
	</delete>
	
</mapper>